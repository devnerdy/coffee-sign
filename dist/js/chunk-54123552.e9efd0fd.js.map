{"version":3,"sources":["webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js","webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./src/components/UserIcon.vue?580f","webpack:///src/components/UserIcon.vue","webpack:///./src/components/UserIcon.vue?e5c5","webpack:///./src/components/UserIcon.vue","webpack:///./src/components/UserIcon.vue?5684"],"names":["Object","defineProperty","exports","value","_cropperjs","__webpack_require__","_cropperjs2","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","prototype","hasOwnProperty","call","previewPropType","window","String","Array","Element","NodeList","render","h","style","this","containerStyle","ref","attrs","src","alt","imgStyle","props","type","viewMode","Number","dragMode","aspectRatio","data","preview","responsive","Boolean","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","Function","cropstart","cropmove","cropend","crop","zoom","mounted","_$options$props","$options","key","undefined","cropper","$refs","img","methods","reset","clear","initCrop","replace","url","onlyColorChanged","arguments","length","enable","disable","destroy","move","offsetX","offsetY","moveTo","x","y","relativeZoom","ratio","_originalEvent","zoomTo","rotate","degree","rotateTo","scaleX","_scaleX","scaleY","_scaleY","scale","getData","rounded","setData","getContainerData","getImageData","getCanvasData","setCanvasData","getCropBoxData","setCropBoxData","getCroppedCanvas","options","setAspectRatio","setDragMode","mode","global","factory","module","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","isArray","arr2","iter","toString","from","IS_BROWSER","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","initialAspectRatio","NaN","TEMPLATE","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","isPlainObject","_constructor","error","isFunction","slice","toArray","forEach","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","property","hasClass","classList","contains","className","addClass","elem","add","trim","removeClass","remove","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","name","dataset","getAttribute","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","get","set","addEventListener","removeEventListener","removeListener","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","n","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","check","side","p","hasSameSize","isImg","replaced","uncreate","load","originalUrl","_this$canvasData","pivot","oldRatio","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","NUMBER","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","code","digits","l","parseInt","that","valueOf","j","_vm","_h","$createElement","_c","_self","class","icon_name","on","mouseover","$event","hoverIcon","mouseleave","leaveIcon","staticRenderFns","UserIconvue_type_script_lang_js_","icon","required","parent_hover","hover","icon_only_name","substring","icon_type","parent_event","watch","newVal","oldVal","console","log","components_UserIconvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_UserIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_UserIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-54123552.e9efd0fd.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar previewPropType = typeof window === 'undefined' ? [String, Array] : [String, Array, Element, NodeList];\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    aspectRatio: Number,\n    data: Object,\n    preview: previewPropType,\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};","/*!\n * Cropper.js v1.5.4\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-08-03T08:38:42.128Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('img',{class:_vm.button?'icon-hover':'',attrs:{\"src\":'img/icons/'+_vm.icon_name},on:{\"mouseover\":function($event){return _vm.hoverIcon()},\"mouseleave\":function($event){return _vm.leaveIcon()}}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <img\r\n    v-bind:src=\"'img/icons/'+icon_name\"\r\n    v-bind:class=\"button?'icon-hover':''\"\r\n    @mouseover=\"hoverIcon()\"\r\n    @mouseleave=\"leaveIcon()\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserIcon\",\r\n  props: {\r\n    button: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    icon: {\r\n      type: String,\r\n      required: true,\r\n      default: \"add-recipien\"\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 18\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 18\r\n    },\r\n    parent_hover: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hover: false,\r\n      icon_name: this.icon,\r\n      icon_only_name: this.icon.substring(0, this.icon.length - 4),\r\n      icon_type: this.icon.substring(this.icon.length - 4),\r\n      parent_event: this.parent_hover\r\n    };\r\n  },\r\n  methods: {\r\n    hoverIcon() {\r\n      if (!this.button) return;\r\n      this.icon_name = this.icon_only_name + \"_active\" + this.icon_type;\r\n    },\r\n    leaveIcon() {\r\n      if (!this.button) return;\r\n      this.icon_name = this.icon_only_name + this.icon_type;\r\n    }\r\n  },\r\n  watch: {\r\n    parent_event: function (newVal, oldVal) {\r\n      console.log(newVal);\r\n      if(newVal == true) this.hoverIcon();\r\n      else this.leaveIcon();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.icon-hover:hover {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserIcon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserIcon.vue?vue&type=template&id=ff9fa8e4&\"\nimport script from \"./UserIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./UserIcon.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserIcon.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserIcon.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserIcon.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}